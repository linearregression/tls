%%% -*-mode:erlang;coding:utf-8;tabidth,:4;c-basic-offset:4;indent-tabs-mode:()-*-
%%% ex: set ft=erlang fenc=utf-8 sts=4 ts=4 sw=4 et:
%%%

%%% Require OTP 17.0 at a bare minimum
{require_min_otp_vsn, "17"}.

%% Plugins
{plugins, []}.
% {shell_apps, [tls]}.

{erl_opts, [debug_info,
    {warn_format, 1},
    {parse_transform, lager_transform},
    {lager_truncation_size, 8192},
%    bin_opt_info,  % commented out for now. Need t inspect if a fix is really necessary
    inline_list_funcs,
    no_debug_info,
    warnings_as_errors,
    report_warnings,
    stong_validation,
    warn_untyped_record,
    warn_export_vars,
    warn_export_all,
    warn_shadow_vars,
    warn_obsolete_guard,
    warn_unused_import,
    warn_deprecated_function,
    warn_unused_vars,
    warn_unused_function,
    warn_bif_clash,
    warn_unused_record,
    warn_exported_vars
]}.

{pre_hooks,
  [{"(linux|darwin|solaris)", compile, "make -C c_src"},
   {"(freebsd)", compile, "gmake -C c_src"}]}.
{post_hooks,
  [{"(linux|darwin|solaris)", clean, "make -C c_src clean"},
   {"(freebsd)", clean, "gmake -C c_src clean"}]}.

%% == Cleanup ==

%% Which files to cleanup
{clean_files, ["./priv/p1_tls_drv.so", "./priv/p1_sha.so"]}.

{deps, [
    {lager, ".*", {git, "git://github.com/basho/lager.git", {tag, "3.0.1"}}}
]}.

{profiles, [{test, [
    {erl_opts, [warnings_as_errors, debug_info, no_inline_list_funcs]},
    {deps, [
        {meck, ".*", {git, "git://github.com/eproxus/meck.git", {tag, "0.8.3"}}},
        {sync, ".*", {git, "git://github.com/rustyio/sync.git", {branch, "master"}}}
    ]}]}
]}.

%% Default code coverage to `false'
{cover_enabled, true}.
{cover_print_enabled, true}.
{cover_export_enabled, true}.
{cover_opts, [verbose]}.

%% ct:run opts
{ct_opts, [{logdir, "log/ct"},
    {dir, "./test/"},
    {include, ["include"]},
    {suites, "test", all},
    {cover,"test/tls.coverspec"},
    {suite, [
        local_functional_SUITE,
        remote_functional_SUITE
    ]}
]}.

% Dialyzer
{dialyzer, [
    {warnings, [no_return, no_unused, no_improper_lists, no_fun_app, no_match, no_opaque, no_fail_call,
        no_contracts, no_behaviours, no_undefined_callbacks, unmatched_returns, error_handling, race_conditions,
        overspecs, underspecs, specdiffs]},
    {get_warnings, true},
    {plt_location, "_plt"},
    {base_plt_location, global}
]}.

%% XRef
{xref_warnings, true}.
{xref_extra_paths, []}.
{xref_checks,[undefined_function_calls, undefined_functions, locals_not_used,
              deprecated_function_calls, deprecated_functions]}.
